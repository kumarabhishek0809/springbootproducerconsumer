buildscript {
	ext {
		springBootVersion = '2.1.9.RELEASE'
	}
	repositories {
		mavenCentral()
		mavenLocal()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'docker'
}

ext {
	springBootVersion = '2.1.9.RELEASE'
	springVersion = '5.1.9.RELEASE'
	swaggerVersion = '2.9.2'
}

group = 'com.spring-producer-consumer'
version = 'latest'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	mavenLocal()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {

	compile('org.springframework.boot:spring-boot-starter-data-jpa'){
		exclude(module: 'spring-boot-starter-logging')
		exclude(module: 'org.hibernate')
	}
	compile "mysql:mysql-connector-java"
	compile('org.hibernate:hibernate-core:5.4.4.Final')


	//Java
	compile "javax.xml:jaxb-api:2.1"

	implementation('org.springframework.boot:spring-boot-starter-web'){
		exclude(module: 'spring-boot-starter-logging')
	}
	implementation('org.springframework.boot:spring-boot-starter-actuator'){
		exclude(module: 'spring-boot-starter-logging')
	}
	implementation('org.springframework.boot:spring-boot-devtools'){
		exclude(module: 'spring-boot-starter-logging')
	}

	compile('org.springframework.boot:spring-boot-starter-log4j2')
	compile('org.projectlombok:lombok:1.18.8')
	annotationProcessor('org.projectlombok:lombok:1.18.8')

	testCompile('org.springframework.boot:spring-boot-starter-test')



	compile('org.mapstruct:mapstruct-jdk8:1.3.0.Final')
	annotationProcessor('org.mapstruct:mapstruct-processor:1.3.0.Final')

	compile("org.springframework:spring-core:${springVersion}")
	compile 'io.springfox:springfox-swagger-ui:2.9.2'
	compile 'io.springfox:springfox-swagger2:2.9.2'
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

task buildDocker(type: Docker, dependsOn: build) {
	push = true
	tag = 'kumarabhishek0809/spring-boot-producerconsumer'
	applicationName = jar.baseName
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}
